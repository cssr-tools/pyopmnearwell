<%
import math as mt
import numpy as np
%>-- Copyright (C) 2024 NORCE
-- This deck was generated by pyopmnearwell https://github.com/cssr-tools/pyopmnearwell
----------------------------------------------------------------------------
RUNSPEC
----------------------------------------------------------------------------
DIMENS 
% if dic['grid']=='core':
${dic['nocells'][0]} ${dic['nocells'][1]} ${dic['nocells'][2]} /
% else:
${max(dic['nocells'][0],dic['nocells'][1])} ${dic['nocells'][1]} ${dic['nocells'][2]} /
% endif

WATER
GAS
CO2STORE
DISGASW

METRIC

START
1 JAN 2000 /
% if dic['grid']=='radial':

RADIAL
% endif

EQLDIMS
/

TABDIMS
${f"{(1*(dic['hysteresis']!=0)+1)*(dic['satnum']+dic['perforations'][0])} /" if (1*(dic["hysteresis"]!=0)+1)*(dic['satnum']+dic['perforations'][0])>1 else "/"}
% if dic["hysteresis"]!=0:

SATOPTS
HYSTER /
% endif

WELLDIMS
${dic['nocells'][2]} ${dic['nocells'][2]} 1 ${dic['nocells'][2]} /

UNIFOUT
----------------------------------------------------------------------------
GRID
----------------------------------------------------------------------------
% if dic['write']==1:
INIT
% else:
GRIDFILE 
0 0 /
% endif
% if dic["fluxnum"]:

INCLUDE
FLUXNUM.INC /
% endif

INCLUDE
GEOLOGY.INC /
% if dic["pvmult"]>0:
----------------------------------------------------------------------------
EDIT
----------------------------------------------------------------------------
INCLUDE
MULTPV.INC /
% endif
----------------------------------------------------------------------------
PROPS
----------------------------------------------------------------------------
INCLUDE
TABLES.INC /
% if dic["hysteresis"]!=0:

EHYSTR
1* ${0 if dic["hysteresis"].upper()=="CARLSON" else 2} 2* BOTH /
% endif

% if dic["rockcomp"]>0:
ROCK
276 ${dic["rockcomp"]} /
% endif

% if dic["salinity"]>0:
SALINITY
${dic["salinity"]} /
% endif
% if dic["hysteresis"]!=0 or dic["fluxnum"]:
----------------------------------------------------------------------------
REGIONS
----------------------------------------------------------------------------
% if dic["hysteresis"]!=0 and dic["fluxnum"]:
COPY
FLUXNUM SATNUM /
FLUXNUM IMBNUM /
/

ADD
IMBNUM ${len(dic["rock"])} /
/
% elif dic["fluxnum"]:
COPY
FLUXNUM SATNUM /
/
% else:
IMBNUM
${dic['nocells'][0]*dic['nocells'][1]*dic['nocells'][2]}*2 /
% endif
% endif
----------------------------------------------------------------------------
SOLUTION
----------------------------------------------------------------------------
EQUIL
0 ${dic['pressure']} ${mt.floor(dic["initialphase"]*dic['dims'][2])} 0 0 0 1 1 0 /

RTEMPVD
${"".join([' ' for _ in range(len(str(dic['dims'][2]))-1)])}0 ${dic['temperature'][0]}
${dic['dims'][2]} ${dic['temperature'][1]} /
% if dic['write']==1:

RPTRST 
BASIC=2 DEN RPORV /
% endif
----------------------------------------------------------------------------
SUMMARY
----------------------------------------------------------------------------
PERFORMA
FGMIP
FGMIT
FGMPT
FGIP
FWIP
FPR
FGIP
FWIP
FGIR
FWIR
FGIT
FGPT
FGMDS
FGMIR
FGMPR
FWIT
WGIR
/
WGPR
/
WGIT
/
WGPT
/
WBHP
/
RPR
/
RWIP
/
RGIP
/
WWPR
/
WPI
/
----------------------------------------------------------------------------
SCHEDULE
----------------------------------------------------------------------------
% if dic['write']==1:
RPTRST
BASIC=2 DEN RPORV /

% endif
WELSPECS
% if dic['grid']=='core':
INJ0 G1 1 ${1+mt.floor(dic['nocells'][2]/2)} 1* ${'GAS' if dic['inj'][0][2]>0 else 'WATER'} 3* ${'NO' if dic["xflow"]>0 else ''} /
% else:
INJ0 G1 ${max(1, 1+mt.floor(dic['nocells'][1]/2))} ${max(1, 1+mt.floor(dic['nocells'][1]/2))} 1* ${'GAS' if dic['inj'][0][2]>0 else 'WATER'} 3* ${'NO' if dic["xflow"]>0 else ''} /
% endif
% if dic["pvmult"]==0 or dic['grid']=='core':
% if dic['grid']=='core':
PRO0 G1 ${dic['nocells'][0]} ${1+mt.floor(dic['nocells'][2]/2)} 1* WATER /
% elif dic['grid'] != 'cartesian' and dic['grid'] != 'tensor3d' and dic['grid'] != 'coord3d' and dic['grid'] != 'cpg3d':
PRO0 G1 ${dic['nocells'][0]} 1 1* WATER /
% else:
PRO0 G1 1 1 1* WATER /
PRO1 G1 ${dic['nocells'][0]} 1 1* WATER /
PRO2 G1 1 ${dic['nocells'][0]} 1* WATER /
PRO3 G1 ${dic['nocells'][0]} ${dic['nocells'][0]} 1* WATER /
% endif
% endif
/
COMPDAT
% if dic["confact"]==0:
% if dic['grid']=='core':
INJ0 1 ${1+mt.floor(dic['nocells'][2]/2)} ${1+mt.floor(dic['nocells'][2]/2)} ${1+mt.floor(dic['nocells'][2]/2)} OPEN 2* ${dic['diameter']} /
% else:
INJ0 ${max(1, 1+mt.floor(dic['nocells'][1]/2))} ${max(1, 1+mt.floor(dic['nocells'][1]/2))} 1 ${dic['nocells'][2]} OPEN 2* ${dic['diameter']} /
% endif
% else:
% if dic['grid']=='core':
INJ0 1 ${1+mt.floor(dic['nocells'][2]/2)} ${1+mt.floor(dic['nocells'][2]/2)} ${1+mt.floor(dic['nocells'][2]/2)} OPEN 1* ${dic["confact"]} /
% else:
INJ0 ${max(1, 1+mt.floor(dic['nocells'][1]/2))} ${max(1, 1+mt.floor(dic['nocells'][1]/2))} 1 ${dic['nocells'][2]} OPEN 1* ${dic["confact"]*2*mt.pi*dic['rock'][0][0]*dic['dims'][2]/dic['nocells'][2]} /
% endif
% endif
% if dic["pvmult"]==0 or dic['grid']=='core':
% if dic['grid']=='core':
PRO0 ${dic['nocells'][0]} ${1+mt.floor(dic['nocells'][2]/2)} ${1+mt.floor(dic['nocells'][2]/2)} ${1+mt.floor(dic['nocells'][2]/2)} OPEN 1* ${dic["confact"]} /
% elif dic['grid'] != 'cartesian' and dic['grid'] != 'tensor3d' and dic['grid'] != 'coord3d' and dic['grid'] != 'cpg3d':
PRO0 ${dic['nocells'][0]} 1 1 ${0*dic['nocells'][2]+1} OPEN 2* ${dic['diameter']} /
% else:
PRO0 1 1 1 ${0*dic['nocells'][2]+1} OPEN 2* ${dic['diameter']} /
PRO1 ${dic['nocells'][0]} 1 1 ${0*dic['nocells'][2]+1} OPEN 2* ${dic['diameter']} /
PRO2 1 ${dic['nocells'][0]} 1 ${0*dic['nocells'][2]+1} OPEN 2* ${dic['diameter']} /
PRO3 ${dic['nocells'][0]} ${dic['nocells'][0]} 1 ${0*dic['nocells'][2]+1} OPEN 2* ${dic['diameter']} /
% endif
% endif
/
% for j in range(len(dic['inj'])):

% if dic["tuning"]:
TUNING
${dic['inj'][j][4]+" " if len(dic['inj'][j])>4 else ""}/
${dic['inj'][j][5]+" " if len(dic['inj'][j])>5 else ""}/
${dic['inj'][j][6]+" " if len(dic['inj'][j])>6 else ""}/
% endif
WCONINJE
% if dic['inj'][j][2]>0:
INJ0 GAS ${'OPEN' if dic['inj'][j][3]>0 else 'SHUT'} RATE ${f"{dic['inj'][j][3] / 1.86843:E}"} 1* 480 /
% else:
INJ0 WATER ${'OPEN' if dic['inj'][j][3]>0 else 'SHUT'} RATE ${f"{dic['inj'][j][3] / 998.108:E}"} 1* 480 /
% endif
/
% if dic["pvmult"]==0 or dic['grid']=='core': 
WCONPROD
% if dic['grid']=='cartesian' or dic['grid']=='tensor3d' or dic['grid']=='coord3d' or dic['grid']=='cpg3d':
PRO0 ${'OPEN' if dic['inj'][j][3]>0 else 'SHUT'} BHP 5* ${dic['pressure']} /
PRO1 ${'OPEN' if dic['inj'][j][3]>0 else 'SHUT'} BHP 5* ${dic['pressure']} /
PRO2 ${'OPEN' if dic['inj'][j][3]>0 else 'SHUT'} BHP 5* ${dic['pressure']} /
PRO3 ${'OPEN' if dic['inj'][j][3]>0 else 'SHUT'} BHP 5* ${dic['pressure']} /
% else:
PRO0 ${'OPEN' if dic['inj'][j][3]>0 else 'SHUT'} BHP 5* ${dic['pressure']} /
% endif
/
% endif
TSTEP
${f"{round(dic['inj'][j][0]/dic['inj'][j][1])}*" if round(dic['inj'][j][0]/dic['inj'][j][1])>1 else ""}${dic['inj'][j][1]} /
% endfor